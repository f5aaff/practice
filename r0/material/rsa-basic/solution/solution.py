#!/usr/bin/env python3

# Compute t = a^{-1} mod n using the Extended Euclidean Algorithm
def invert(a, n):
    t, new_t = 0, 1
    r, new_r = n, a
    while new_r > 0:
        q = r // new_r
        t, new_t = new_t, t - q * new_t
        r, new_r = new_r, r - q * new_r
    if r > 1:
        raise Exception('Value not invertible')
    if t < 0:
        t = t + n
    return t

if __name__ == '__main__':

    n = 8361074328340404025795048539070521629302282412126495132079574100790509270747452247525443337256776268264880902422835059872397768690777375603943344701121502157169227401110388521858516108824768324953799460300349187217050104684719849195657363613963503626939233713411635346604877043523446466118608849144322999068125942498209832507768016180341123812917506406014884508008198563003254543140032707733997676521927366261488232331817940283258728845753149776273920257951779042995334475317173480260809040794019426300597124676278443600739196420293202824282761519881285955394889894147600149253547069598902273505831695732486257994357
    e = 0x10001
    p = 143320408104013921537679740457092648490475550567471081718003904886080820356484921509116543020157944549960577106325217842278773103250445692387843274849624067761444369640774720256058604115358060675637200084848073806763960625364462369755906766191026892970044677536403565716410465644487939804432109446479575209211
    c = 5628580030668703271639750777047812066485088299780230533646347628962422120960280041943115336576719162761574941021695239726234443142866090406556745899252842652336130753345072854573782738778908971942132260826631475598974937195880472992409338971909236707360120742958405490889862174176478114862038577700912061405632054463172162354722657949549005087716163656936072203489419583857411165313662020209510425398255189741614616068594095366339647775378724014399375763852942800312036075759872274791755184204034944316344593698637604398938373250097393735412370001200126845202458657277953860736895404530005154974983164535187095078691

    # get q
    q = n // p

    # get the order of the group
    t = (p - 1)*(q - 1)

    # invert the public exponent to get the private exponent
    d = invert(e,t)

    # decrypt
    m = pow(c,d,n) 

    # get the encrypted string
    print(hex(m))
